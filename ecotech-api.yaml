openapi: 3.0.0
info:
  title: HRIS API
  version: "1.0"
servers:
  - url: https://eco-tech-2.vercel.app
paths:
  /:
    get:
      summary: Root Endpoint
      responses:
        '200':
          description: OK - returns a welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /health:
    get:
      summary: Health Check
      responses:
        '200':
          description: OK - returns server status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  node:
                    type: string
                  supabaseUrl:
                    type: string
  /login-request:
    post:
      summary: Request OTP for login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: OTP sent successfully
        '404':
          description: Email not found
  /verify-token:
    post:
      summary: Verify OTP and get JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: JWT returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid or expired token
  /protected:
    get:
      summary: Example protected endpoint
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Decoded JWT payload
        '401':
          description: Unauthorized
  /profile:
    get:
      summary: Get own profile from JWT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Employee data for the logged-in user
    post:
      summary: Add new employee profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: New employee created
  /admin/profile/{employee_id}:
    get:
      summary: ADMIN - Get employee profile by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Employee data or not found message
        '403':
          description: Access denied, admin only
  /profile/{employee_id}:
    patch:
      summary: Update employee profile by ID
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Updated employee data
  /profile/{employee_id}/contract:
    get:
      summary: Get employee contract status
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Contract details
  /profile/{employee_id}/leave-balance:
    get:
      summary: Get employee leave balance
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Leave balance details
  /leave-preview:
    post:
      summary: Preview leave request and check balance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Leave preview result
  /leave/apply:
    post:
      summary: Apply for leave
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Leave applied successfully
  /leave/cancel:
    post:
      summary: Cancel a leave request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Leave request successfully canceled
  /payslips/{employee_id}:
    get:
      summary: Get payslips for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: List of payslips
  /trainings/{employee_id}:
    get:
      summary: Get trainings for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: List of trainings
  /trainings/{employee_id}/feedback:
    post:
      summary: Submit training feedback
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Feedback submitted
  /remote-request:
    post:
      summary: Create a remote work request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Request created successfully
  /performance-review/{employee_id}:
    get:
      summary: Get performance review and development plan
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Performance review details
  /kpi/{employee_id}:
    get:
      summary: Get KPI for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: KPI details
  /reward/{employee_id}:
    get:
      summary: Get reward records for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Reward record details
  /disciplinary/{employee_id}:
    get:
      summary: Get disciplinary records for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Disciplinary records
  /grievance/{employee_id}:
    get:
      summary: Get grievance records for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Grievance record details
  /incident/{employee_id}:
    get:
      summary: Get incident reports for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Incident report details
  /timesheet/{employee_id}:
    get:
      summary: Get timesheet data for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Timesheet details
  /overtime/{employee_id}:
    get:
      summary: Get overtime record for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Overtime record details
  /clearance/{employee_id}:
    get:
      summary: Get clearance record for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Clearance record details
  /onboarding/{employee_id}:
    get:
      summary: Get onboarding record for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Onboarding record details
  /transfer/{employee_id}:
    get:
      summary: Get employee transfer data
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Transfer record details
  /workmode/{employee_id}:
    get:
      summary: Get work mode status for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Current work mode
  /remote-request/{employee_id}:
    get:
      summary: Get remote request details for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Remote request data
  /remote-checklist/{employee_id}:
    get:
      summary: Get remote checklist for an employee
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Remote checklist details
  /internal-application:
    post:
      summary: Apply for internal job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Application submitted successfully
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
